import 'package:divmeds/features/navigationbar/bottomnavigationbar/features/home/models/dummy_post_models.dart';
import 'package:dots_indicator/dots_indicator.dart';
import 'package:flutter/material.dart';
import 'package:video_player/video_player.dart';
import '../../../../../../designs/app_colors.dart';

class DummyPostCard extends StatelessWidget {
  final DummyPost post;

  const DummyPostCard({super.key, required this.post});

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.all(16.0),
      margin: const EdgeInsets.all(16.0),
      decoration: BoxDecoration(
        color: AppColors.divMedsColorBlueScaffoldAccent,
        borderRadius: BorderRadius.circular(16.0),
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withOpacity(0.5),
            spreadRadius: 5,
            blurRadius: 7,
            offset: Offset(0, 3),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _PostHeader(userId: post.username, profileImageUrl: post.profileImageUrl),
          const SizedBox(height: 16.0),
          if (post.content.isNotEmpty)
            _PostContent(content: post.content),
          if (post.content.isEmpty && post.caption != null)
            Center(child: _PostText(text: post.caption!)),
          const SizedBox(height: 16.0),
          if (post.content.isNotEmpty && post.caption != null)
            _PostCaption(username: post.username, caption: post.caption!),
          const SizedBox(height: 8.0),
          _PostActions(),
          const SizedBox(height: 8.0),
          _PostLikes(),
          const SizedBox(height: 8.0),
          _PostComments(),
        ],
      ),
    );
  }
}

class _PostHeader extends StatelessWidget {
  final String userId;
  final String profileImageUrl;

  const _PostHeader({required this.userId, required this.profileImageUrl});

  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        CircleAvatar(
          backgroundImage: NetworkImage(profileImageUrl),
          radius: 20.0,
        ),
        const SizedBox(width: 8.0),
        Text(
          userId,
          style: const TextStyle(
            fontWeight: FontWeight.bold,
          ),
        ),
        const Spacer(),
        IconButton(
          icon: const Icon(Icons.more_vert),
          onPressed: () {
            // Add your onPressed code here!
          },
        ),
      ],
    );
  }
}

class _PostContent extends StatefulWidget {
  final List<PostContent> content;

  const _PostContent({required this.content});

  @override
  __PostContentState createState() => __PostContentState();
}

class __PostContentState extends State<_PostContent> {
  final PageController _pageController = PageController();
  int _currentPage = 0;

  @override
  Widget build(BuildContext context) {
    List<Widget> mediaWidgets = widget.content.take(4).map((contentItem) {
      if (contentItem.type == PostContentType.image) {
        return _PostImage(imageUrl: contentItem.data);
      } else if (contentItem.type == PostContentType.video) {
        return _PostVideo(videoUrl: contentItem.data);
      }
      return Container();
    }).toList();

    return Column(
      children: [
        SizedBox(
          height: 300,
          child: PageView(
            controller: _pageController,
            onPageChanged: (index) {
              setState(() {
                _currentPage = index;
              });
            },
            children: mediaWidgets,
          ),
        ),
        if (mediaWidgets.length > 1)
          DotsIndicator(
            dotsCount: mediaWidgets.length,
            position: _currentPage,
            decorator: DotsDecorator(
              activeColor: Colors.blue,
            ),
          ),
      ],
    );
  }
}

class _PostImage extends StatelessWidget {
  final String imageUrl;

  const _PostImage({required this.imageUrl});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(4.0),
      child: Image.network(
        imageUrl,
        fit: BoxFit.cover,
      ),
    );
  }
}

class _PostVideo extends StatefulWidget {
  final String videoUrl;

  const _PostVideo({required this.videoUrl});

  @override
  _PostVideoState createState() => _PostVideoState();
}

class _PostVideoState extends State<_PostVideo> {
  late VideoPlayerController _controller;

  @override
  void initState() {
    super.initState();
    _controller = VideoPlayerController.networkUrl(Uri.parse(widget.videoUrl))
      ..initialize().then((_) {
        setState(() {});
        _controller.play();
        _controller.setLooping(true);
      });
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(4.0),
      child: _controller.value.isInitialized
          ? AspectRatio(
              aspectRatio: _controller.value.aspectRatio,
              child: VideoPlayer(_controller),
            )
          : Container(
              height: 200.0,
              color: Colors.black12,
              child: const Center(child: CircularProgressIndicator()),
            ),
    );
  }
}

class _PostText extends StatelessWidget {
  final String text;

  const _PostText({required this.text});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Text(
        text,
        style: const TextStyle(
          fontSize: 16.0,
          color: Colors.black87,
        ),
        textAlign: TextAlign.center,
      ),
    );
  }
}

class _PostActions extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        IconButton(
          icon: const Icon(Icons.favorite_border),
          onPressed: () {
            // Add your onPressed code here!
          },
        ),
        IconButton(
          icon: const Icon(Icons.comment_outlined),
          onPressed: () {
            // Add your onPressed code here!
          },
        ),
        IconButton(
          icon: const Icon(Icons.share),
          onPressed: () {
            // Add your onPressed code here!
          },
        ),
        const Spacer(),
        IconButton(
          icon: const Icon(Icons.bookmark_border),
          onPressed: () {
            // Add your onPressed code here!
          },
        ),
      ],
    );
  }
}

class _PostLikes extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return const Text(
      'Liked by user1, user2 and 123 others',
      style: TextStyle(
        fontWeight: FontWeight.bold,
      ),
    );
  }
}

class _PostCaption extends StatelessWidget {
  final String username;
  final String caption;

  const _PostCaption({required this.username, required this.caption});

  @override
  Widget build(BuildContext context) {
    return RichText(
      text: TextSpan(
        style: DefaultTextStyle.of(context).style,
        children: [
          TextSpan(
            text: '$username ',
            style: const TextStyle(fontWeight: FontWeight.bold),
          ),
          TextSpan(
            text: caption,
          ),
        ],
      ),
    );
  }
}

class _PostComments extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return const Text(
      'View all 10 comments',
      style: TextStyle(
        color: Colors.grey,
      ),
    );
  }
}
